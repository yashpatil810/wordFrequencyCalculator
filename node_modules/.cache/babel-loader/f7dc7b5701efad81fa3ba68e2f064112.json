{"ast":null,"code":"import _objectSpread from \"/Users/yash/Documents/nodejs/ttt/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/yash/Documents/nodejs/ttt/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/yash/Documents/nodejs/ttt/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/yash/Documents/nodejs/ttt/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/yash/Documents/nodejs/ttt/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/yash/Documents/nodejs/ttt/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/yash/Documents/nodejs/ttt/src/App.js\";\nimport React, { Component } from 'react';\n\nvar axios = require('axios');\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.handleSubmitFC = function (e) {\n      // TRIGGER ON SUBMITING THE INPUT\n      e.preventDefault();\n\n      if (_this.state.limit.match(/^[1-9]+$/)) {\n        // INPUT VALIDATION\n        axios({\n          method: 'post',\n          url: 'http://localhost:5001/api/api',\n          // API URL\n          data: {\n            limit: _this.state.limit,\n            expandContractions: _this.state.expandContractions\n          }\n        }).then(function (response) {\n          if (response.data.error) {\n            // IF ANY ERROR\n            alert(response.data.error);\n          }\n\n          _this.setState(function (state) {\n            return _objectSpread({}, state, {\n              words: response.data.words,\n              // STORE ALL WORDS FROM RESPONSE\n              sortedFC: response.data.sortedFC // STORE TOP N SORTED WORDS\n\n            });\n          });\n        }).catch(function (error) {\n          console.log(error);\n        });\n      } else {\n        // INVALID INPUT\n        alert('Please enter a positive integer');\n\n        _this.setState(function (state) {\n          return _objectSpread({}, state, {\n            limit: ''\n          });\n        });\n      }\n    };\n\n    _this.state = {\n      words: [],\n      // ALL WORDS OF THE FILE\n      sortedFC: [],\n      // TOP N SORTED WORDS WITH THIER OCCURENCE\n      limit: '',\n      // USER INPUT: N\n      expandContractions: false // EXPAND CONTRACTIONS true/false\n\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log(this.state);\n\n      if (this.state.sortedFC !== undefined) {\n        var i = 0;\n        var words = this.state.sortedFC.map(function (w) {\n          // STORE TOP N SORTED WORDS IN TABULAR VIEW\n          i++;\n          return React.createElement(\"tr\", {\n            key: i,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55\n            },\n            __self: this\n          }, i), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 56\n            },\n            __self: this\n          }, w[0]), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57\n            },\n            __self: this\n          }, w[1]));\n        });\n      } else {\n        // IF ERROR\n        words = [];\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"main\", {\n        role: \"main\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"jumbotron\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"display-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Word Frequency Calculator\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"A frontend to get the top N most frequently occurring words from the file\"), React.createElement(\"a\", {\n        href: \"http://terriblytinytales.com/test.txt\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"pre\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"http://terriblytinytales.com/test.txt\")), React.createElement(\"form\", {\n        className: \"form-inline justify-content-center\",\n        onSubmit: this.handleSubmitFC.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group mr-2 mb-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"inputCount\",\n        placeholder: \"Enter number\",\n        title: \"Please enter a positive integer\",\n        required: true,\n        pattern: \"[1-9]+\",\n        value: this.state.limit,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            limit: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary mb-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Submit\")), React.createElement(\"input\", {\n        className: \"form-check-input\",\n        type: \"checkbox\",\n        value: \"\",\n        id: \"expandContractions\",\n        onChange: function onChange(e) {\n          return _this2.setState({\n            expandContractions: !_this2.state.expandContractions\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        className: \"form-check-label\",\n        htmlFor: \"expandContractions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Expand Contractions\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), React.createElement(\"small\", {\n        className: \"text-muted align-top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"(eg. we're => we are)\"))), React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, words.length > 0 ? // HIDE TABLE BEFORE FETCHING THE WORDS\n      React.createElement(\"table\", {\n        className: \"table table-bordered table-striped mb-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"#\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"Word\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Occurence\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, words)) : React.createElement(React.Fragment, null))))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/yash/Documents/nodejs/ttt/src/App.js"],"names":["React","Component","axios","require","App","props","handleSubmitFC","e","preventDefault","state","limit","match","method","url","data","expandContractions","then","response","error","alert","setState","words","sortedFC","catch","console","log","undefined","i","map","w","bind","target","value","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nconst axios = require('axios')\n\nclass App extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            words: [],                  // ALL WORDS OF THE FILE\n            sortedFC: [],               // TOP N SORTED WORDS WITH THIER OCCURENCE\n            limit: '',                  // USER INPUT: N\n            expandContractions: false   // EXPAND CONTRACTIONS true/false\n        }\n    }\n\n    handleSubmitFC = (e) => {                         // TRIGGER ON SUBMITING THE INPUT\n        e.preventDefault();   \n        if(this.state.limit.match(/^[1-9]+$/)){       // INPUT VALIDATION\n            axios({\n                method: 'post',\n                url: 'http://localhost:5001/api/api', // API URL\n                data : {\n                    limit: this.state.limit,\n                    expandContractions: this.state.expandContractions\n                }\n            })\n                .then((response) => {\n                    if(response.data.error){               // IF ANY ERROR\n                        alert(response.data.error)\n                    }\n                    this.setState( state => ({\n                        ...state,\n                        words: response.data.words,        // STORE ALL WORDS FROM RESPONSE\n                        sortedFC: response.data.sortedFC   // STORE TOP N SORTED WORDS\n                    }))\n                })\n                .catch(function (error) {\n                    console.log(error);\n                });\n        } else {  // INVALID INPUT\n            alert('Please enter a positive integer');\n            this.setState( state=> ({\n                ...state,\n                limit: ''\n            }))\n        }\n    }\n\n    render() {\n        console.log(this.state)\n        if(this.state.sortedFC !== undefined){\n            var i = 0;\n            var words = this.state.sortedFC.map( w => {  // STORE TOP N SORTED WORDS IN TABULAR VIEW\n                i++;\n                return  <tr key={i}>\n                            <td>{i}</td>\n                            <td>{w[0]}</td>\n                            <td>{w[1]}</td>\n                        </tr>\n            })\n        } else { // IF ERROR\n            words = []\n        }\n        \n        return (\n            <div>\n                <main role=\"main\">\n                    <div className=\"jumbotron\">\n                        <div className=\"container text-center\">\n                            <h1 className=\"display-5\">Word Frequency Calculator</h1>\n                            <p>A frontend to get the top N most frequently occurring words from the file</p>\n                            <a href=\"http://terriblytinytales.com/test.txt\" target=\"_blank\" rel=\"noopener noreferrer\"><pre>http://terriblytinytales.com/test.txt</pre></a>\n                            <form className=\"form-inline justify-content-center\" onSubmit={this.handleSubmitFC.bind(this)}>\n                                <div className=\"form-group mr-2 mb-2\">\n                                    <input type=\"text\" className=\"form-control\" id=\"inputCount\" placeholder=\"Enter number\" title=\"Please enter a positive integer\" required pattern=\"[1-9]+\" value={this.state.limit} onChange={(e) => this.setState({limit: e.target.value})}/>\n                                </div>\n                                <button type=\"submit\" className=\"btn btn-primary mb-2\">Submit</button>\n                            </form>\n                            <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"expandContractions\" onChange={(e) => this.setState({expandContractions: !this.state.expandContractions})} />\n                            <label className=\"form-check-label\" htmlFor=\"expandContractions\">\n                                Expand Contractions\n                            </label>\n                            <br/>\n                            <small className=\"text-muted align-top\">(eg. we're => we are)</small>\n                        </div>\n                    </div>\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-12\">\n                            {\n                                words.length > 0 ? (  // HIDE TABLE BEFORE FETCHING THE WORDS\n                                    <table className=\"table table-bordered table-striped mb-5\">\n                                        <thead>\n                                            <tr>\n                                                <th>#</th>\n                                                <th>Word</th>\n                                                <th>Occurence</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {words}\n                                        </tbody>\n                                    </table>\n                                ) : ( <></> )\n                            }\n                            </div>\n                        </div>\n                    </div>\n                </main>\n            </div>\n        );\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}